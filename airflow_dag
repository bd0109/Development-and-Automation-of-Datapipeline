from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime, timedelta
import subprocess

default_args = {
    'owner': 'airflow',
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

def run_ingest():
    subprocess.run(['python3', '/home/dobariya/airflow/dags/ingest_data.py'], check=True)

def run_transform():
    subprocess.run(['python3', '/home/dobariya/airflow/dags/transform_data.py'], check=True)

def run_load():
    subprocess.run(['python3', '/home/dobariya/airflow/dags/load_to_mysql.py'], check=True)

with DAG(
    dag_id='crypto_pipeline_dag',
    default_args=default_args,
    description='Crypto pipeline DAG to ingest, transform, and load data',
    schedule_interval='@daily',  # change as needed
    start_date=datetime(2024, 1, 1),
    catchup=False,
) as dag:

    ingest_task = PythonOperator(
        task_id='ingest_data',
        python_callable=run_ingest
    )

    transform_task = PythonOperator(
        task_id='transform_data',
        python_callable=run_transform
    )

    load_task = PythonOperator(
        task_id='load_data',
        python_callable=run_load
    )

    ingest_task >> transform_task >> load_task
